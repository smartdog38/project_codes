#################################################################################################
#################################################################################################
"""

SYS module
Python 的 sys 模块提供了与 Python 解释器及其环境交互的接口，包含系统相关的参数和函数。

"""
#################################################################################################
"""

常用函数以及属性

"""
#################################################################################################

# sys.argv()
# sys.exit()
# sys.path
# sys.modules
# sys.platform
# 在 IO 里介绍过的
# sys.stdin
# sys.stdout
# sys.stderr

import sys



# sys.argv()
# 获取脚本的命令行参数列表
# sys.argv[0] 是脚本名称
# 后续元素是命令行传入的参数（字符串形式）
print("脚本名称:", sys.argv[0])
print("参数列表:", sys.argv[1:])  # 从第二个参数开始
# 在控制台运行
# python D:\code\Python\py_study\Py_module\SYS.py hh ju uua
# 脚本名称: D:\code\Python\py_study\Py_module\SYS.py
# 参数列表: ['hh', 'ju', 'uua']


# sys.exit()
# 终止 Python 程序，可返回退出状态码
# 默认退出码为 0（表示成功）
# 非零退出码通常表示异常终止
if len(sys.argv) < 2:
    # 退出并打印错误信息
    sys.exit("错误：缺少参数！")
# 在终端运行python D:\code\Python\py_study\Py_module\SYS.py
# 脚本名称: D:\code\Python\py_study\Py_module\SYS.py
# 参数列表: []
# 错误：缺少参数！

# sys.path
# 一个列表，包含 Python 解释器在导入模块时会搜索的路径
# 可以通过修改 sys.path 来动态添加模块搜索路径
print("默认模块搜索路径:", sys.path)

# 添加自定义路径
sys.path.append("/path/to/custom/module")
print("修改后的模块搜索路径:", sys.path)


# sys.modules()
# 是一个字典，包含当前已加载的模块
# 键是模块名，值是模块对象
import math


print("已加载的模块:", list(sys.modules.keys()))


# sys.platform
# 返回当前运行的操作系统平台标识符
print("操作系统平台:", sys.platform)
# win32

# win32：Windows 系统
# linux：Linux 系统
# darwin：macOS 系统

#################################################################################################
#################################################################################################
#################################################################################################